name: CI/CD Pipeline for Spring Boot Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java environment (JDK 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # Use temurin for the JDK distribution

      # Step 3: Cache Maven dependencies to speed up builds (optional)
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Verify that pom.xml is in the correct location (debugging)
      - name: List files to check for pom.xml
        run: |
          ls -R

      # Step 5: Navigate to the project directory where pom.xml is located
      - name: Navigate to project directory
        run: |
          cd services/narocnine/narocnine-service
          # Verify that the pom.xml is in the directory
          ls

      # Step 6: Build the application using Maven
      - name: Build with Maven
        run: |
          cd services/narocnine/narocnine-service
          mvn clean install -DskipTests

      # Step 7: Run tests
      - name: Run tests
        run: |
          cd services/narocnine/narocnine-service
          mvn test

      # Step 8: Build Docker image (ensure Dockerfile is in the correct directory)
      - name: Build Docker image
        run: |
          cd services/narocnine/narocnine-service
          docker build -t my-springboot-app -f Dockerfile .
