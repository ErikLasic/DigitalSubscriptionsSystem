name: CI/CD Pipeline for Spring Boot Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java environment (JDK 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # Use temurin for the JDK distribution

      # Step 3: Cache Maven dependencies to speed up builds (optional)
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the application using Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests

      # Step 5: Run tests
      - name: Run tests
        run: mvn test

      # Step 6: Build Docker image (optional, if you want to containerize your app)
      - name: Build Docker image
        run: docker build -t my-springboot-app .

      # Step 7: Push Docker image to DockerHub (optional)
      - name: Push Docker image to DockerHub (optional)
        if: success()
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker tag my-springboot-app:latest myusername/my-springboot-app:latest
          docker push myusername/my-springboot-app:latest

      # Step 8: Deploy Application (optional)
      - name: Deploy Application (optional)
        run: |
          echo "Deploying the application..."
          # Add your deployment commands here
